"""init database schema

Revision ID: 27e1d0e0c28c
Revises: 
Create Date: 2025-04-28 17:07:22.121843

"""

from alembic import op
import sqlalchemy as sa



# revision identifiers, used by Alembic.
revision = "27e1d0e0c28c"
down_revision = None
branch_labels = None
depends_on = None

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('model', sa.String(), nullable=False),
    sa.Column('model_id', sa.Integer(), nullable=True),
    sa.Column('details', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('audit_logs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_audit_logs_id'), ['id'], unique=False)

    op.create_table('periods',
    sa.Column('TYPE', sa.String(), nullable=False),
    sa.Column('ID', sa.String(), nullable=False),
    sa.Column('Name', sa.String(), nullable=False),
    sa.Column('ActiveAt', sa.DateTime(timezone=True), nullable=False),
    sa.Column('DeactiveAt', sa.DateTime(timezone=True), nullable=False),
    sa.Column('StartAt', sa.DateTime(timezone=True), nullable=False),
    sa.Column('EndAt', sa.DateTime(timezone=True), nullable=False),
    sa.Column('FromAt', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ToAt', sa.DateTime(timezone=True), nullable=False),
    sa.Column('Killer', sa.String(), nullable=False),
    sa.Column('Status', sa.String(), nullable=False),
    sa.Column('FolderPath', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('ID')
    )
    with op.batch_alter_table('periods', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_periods_ID'), ['ID'], unique=False)

    op.create_table('report_types',
    sa.Column('ID', sa.String(), nullable=False),
    sa.Column('DateCreated', sa.DateTime(), nullable=False),
    sa.Column('Name', sa.String(), nullable=False),
    sa.Column('Period_ID', sa.String(), nullable=False),
    sa.Column('ActiveOffset', sa.Integer(), nullable=True),
    sa.Column('ActiveOn', sa.Integer(), nullable=True),
    sa.Column('ActiveAt', sa.Time(), nullable=False),
    sa.Column('DeactiveOffset', sa.Integer(), nullable=True),
    sa.Column('DeactiveOn', sa.Integer(), nullable=True),
    sa.Column('DeactiveAt', sa.Time(), nullable=False),
    sa.Column('StartOffset', sa.Integer(), nullable=True),
    sa.Column('StartOn', sa.Integer(), nullable=True),
    sa.Column('StartAt', sa.Time(), nullable=False),
    sa.Column('EndOffset', sa.Integer(), nullable=True),
    sa.Column('EndOn', sa.Integer(), nullable=True),
    sa.Column('EndAt', sa.Time(), nullable=False),
    sa.Column('FromOffset', sa.Integer(), nullable=True),
    sa.Column('FromOn', sa.Integer(), nullable=True),
    sa.Column('From', sa.Time(), nullable=False),
    sa.Column('ToOffset', sa.Integer(), nullable=True),
    sa.Column('ToOn', sa.Integer(), nullable=True),
    sa.Column('To', sa.Time(), nullable=False),
    sa.Column('XaActiveOffset', sa.Integer(), nullable=True),
    sa.Column('XaActiveOn', sa.Integer(), nullable=True),
    sa.Column('XaActiveAt', sa.Time(), nullable=True),
    sa.Column('XaDeactiveOffset', sa.Integer(), nullable=True),
    sa.Column('XaDeactiveOn', sa.Integer(), nullable=True),
    sa.Column('XaDeactiveAt', sa.Time(), nullable=True),
    sa.Column('XaStartOffset', sa.Integer(), nullable=True),
    sa.Column('XaStartOn', sa.Integer(), nullable=True),
    sa.Column('XaStartAt', sa.Time(), nullable=True),
    sa.Column('XaEndOffset', sa.Integer(), nullable=True),
    sa.Column('XaEndOn', sa.Integer(), nullable=True),
    sa.Column('XaEndAt', sa.Time(), nullable=True),
    sa.Column('XaFromOffset', sa.Integer(), nullable=True),
    sa.Column('XaFromOn', sa.Integer(), nullable=True),
    sa.Column('XaFromAt', sa.Time(), nullable=True),
    sa.Column('XaToOffset', sa.Integer(), nullable=True),
    sa.Column('XaToOn', sa.Integer(), nullable=True),
    sa.Column('XaToAt', sa.Time(), nullable=True),
    sa.Column('DocExtList', sa.String(), nullable=True),
    sa.Column('MaxSize', sa.String(), nullable=True),
    sa.Column('NextAt', sa.DateTime(), nullable=True),
    sa.CheckConstraint('"Period_ID" IN (\'DAILY\',\'WEEKLY\',\'MONTHLY\',\'NONE\')', name='period_id_check'),
    sa.PrimaryKeyConstraint('ID')
    )
    with op.batch_alter_table('report_types', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_report_types_ID'), ['ID'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('time_created', sa.DateTime(), nullable=True),
    sa.Column('avatar', sa.String(), nullable=True),
    sa.Column('level', sa.String(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('reports',
    sa.Column('ID', sa.String(), nullable=False),
    sa.Column('Sender', sa.String(), nullable=False),
    sa.Column('SendID', sa.Integer(), nullable=False),
    sa.Column('PeriodID', sa.String(), nullable=False),
    sa.Column('ReportTypeID', sa.String(), nullable=False),
    sa.Column('ReportPeriodName', sa.String(), nullable=False),
    sa.Column('Blake3sum', sa.String(), nullable=False),
    sa.Column('FilePath', sa.String(), nullable=False),
    sa.Column('FileName', sa.String(), nullable=False),
    sa.Column('OriFileName', sa.String(), nullable=False),
    sa.Column('FileSize', sa.Integer(), nullable=False),
    sa.Column('SentAt', sa.DateTime(timezone=True), nullable=False),
    sa.Column('Comment', sa.String(), nullable=True),
    sa.Column('HasEvent', sa.Boolean(), nullable=True),
    sa.Column('LateSeconds', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['PeriodID'], ['periods.ID'], ),
    sa.PrimaryKeyConstraint('ID')
    )
    with op.batch_alter_table('reports', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_reports_ID'), ['ID'], unique=False)

    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reports', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_reports_ID'))

    op.drop_table('reports')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_id'))

    op.drop_table('users')
    with op.batch_alter_table('report_types', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_report_types_ID'))

    op.drop_table('report_types')
    with op.batch_alter_table('periods', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_periods_ID'))

    op.drop_table('periods')
    with op.batch_alter_table('audit_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_audit_logs_id'))

    op.drop_table('audit_logs')
    # ### end Alembic commands ###
