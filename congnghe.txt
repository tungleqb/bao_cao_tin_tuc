🧩 1. Kiến trúc hệ thống tổng thể
arduino
Copy
Edit
[Frontend] <---> [Backend API Server] <---> [Database] + [File Storage]
                                 |
                           [Admin Panel]
⚙️ 2. Công nghệ đề xuất
Thành phần	Công nghệ đề xuất	Ghi chú
Frontend (Web App)	ReactJS + TailwindCSS + Vite	Dễ phát triển, responsive tốt, hiệu năng cao
Backend (API)	FastAPI (Python)	Dễ viết, mạnh mẽ, tích hợp tốt với async & bảo mật
Database	PostgreSQL	Quản lý quan hệ tốt, mạnh mẽ
Lưu trữ File	File system (gốc server) hoặc S3-compatible storage	Có thể tích hợp với S3 nếu cần mở rộng
Quản lý quyền & xác thực	JWT + OAuth2 (FastAPI built-in)	Đảm bảo an toàn
Quản lý tác vụ định kỳ	APScheduler / Celery	Gửi thông báo nhắc báo cáo, xử lý đúng hạn
Export Excel	openpyxl hoặc pandas	Xuất thống kê báo cáo
🏗️ 3. Các thành phần mã nguồn chính
🔑 3.1. Authentication
/auth/login

/auth/register (chỉ Admin)

/auth/me (xác minh user)

🧑‍💼 3.2. Tài khoản chi nhánh
Tạo / sửa / xóa / xem tài khoản

Trường: username, password, tên chi nhánh, lịch sử gửi báo cáo

📁 3.3. Báo cáo
/report/upload (gửi báo cáo)

/report/history (lịch sử đã gửi)

/report/status (trạng thái đã gửi / đúng hạn / trễ)

Trường báo cáo:

	Tên loại báo cáo

	Đơn vị gửi

	Thời gian

	Có sự kiện hay không (chỉ với báo cáo ngày)

	File đính kèm

📄 3.4. Loại báo cáo
	Tên loại, thời hạn gửi, định kỳ, ID

🧾 3.5. Yêu cầu báo cáo
/report/request – Tạo yêu cầu

Giao diện các chi nhánh sẽ hiển thị nút báo cáo tương ứng

📊 3.6. Thống kê (admin)
/admin/report/statistics

Export thành Excel gồm các cột:

Thứ tự, tên đơn vị, thời gian gửi, chậm bao nhiêu giây, có sự kiện, tên file

🧱 4. skeleton cây thư mục mã nguồn đầy đủ cho cả backend và frontend

project_root/
├── backend/
│   └── app/
│       ├── __init__.py
│       ├── main.py
│       ├── config.py
│       ├── models/
│       │   ├── __init__.py
│       │   ├── user.py
│       │   ├── report.py
│       │   ├── loai_baocao.py
│       │   └── yeu_cau_baocao.py
│       ├── schemas/
│       │   ├── __init__.py
│       │   ├── user.py
│       │   ├── report.py
│       │   ├── loai_baocao.py
│       │   └── yeu_cau.py
│       ├── crud/
│       │   ├── __init__.py
│       │   └── user.py
│       ├── services/
│       │   ├── __init__.py
│       │   └── auth.py
│       ├── dependencies/
│       │   ├── __init__.py
│       │   └── auth.py
│       ├── routers/
│       │   ├── __init__.py
│       │   ├── auth.py
│       │   ├── user.py
│       │   ├── report.py
│       │   ├── loai_baocao.py
│       │   ├── yeu_cau.py
│       │   └── admin.py
│       ├── utils/
│       │   ├── __init__.py
│       │   └── time_utils.py
│       └── static/
│           └── reports/  # Chứa các báo cáo được phân loại theo kỳ và sự kiện
│
├── frontend/
│   └── src/
│       ├── App.jsx
│       ├── main.jsx
│       ├── router.jsx
│       ├── pages/
│       │   ├── LoginPage.jsx
│       │   ├── Dashboard.jsx
│       │   ├── UploadReport.jsx
│       │   ├── HistoryReport.jsx
│       │   ├── StatusReport.jsx
│       │   ├── AdminAccounts.jsx
│       │   ├── AdminLoaiBaoCao.jsx
│       │   ├── AdminYeuCauBaoCao.jsx
│       │   └── AdminThongKeBaoCao.jsx
│       ├── components/
│       │   ├── Navbar.jsx
│       │   ├── CountdownClock.jsx
│       │   └── FileUpload.jsx
│       ├── services/
│       │   ├── api.js
│       │   └── auth.js
│       ├── utils/
│       │   └── time.js
│       └── assets/
│           └── logo.svg
│
└── .env.example  # file cấu hình mẫu cho backend
⏰ 5. Logic thời hạn báo cáo
Hiển thị đồng hồ đếm ngược deadline

Nếu trong thời hạn → nút xanh; nếu hết hạn → nút đỏ

Hệ thống vẫn cho phép gửi trễ → ghi nhận trễ bao nhiêu giây

📂 6. Cơ chế lưu file báo cáo
Đổi tên file: [Tên đơn vị]_[Loại báo cáo]_[Thời gian].ext

Tạo thư mục tương ứng với kỳ báo cáo

Báo cáo ngày chia thành hai thư mục:

co_su_kien/

khong_su_kien/